#include <iostream>
using namespace std;

#define MAX 100

int arr[MAX][MAX];
int dx[] = {0, 1, 0, -1}, dy[] = {-1, 0, 1, 0};
int dir_num;
int x, y;

bool InRange(int x, int y, int n)
{
  return (0 < x && x <= n && 0 < y && y <= n);
}

int main()
{
  int n, t;
  string s;
  int sum = 0;
  cin >> n >> t;
  cin >> s;
  for (int i = 1; i <= n; i++)
  {
    for (int j = 1; j <= n; j++)
    {
      cin >> arr[i][j];
    }
  }

  x = y = (n / 2 + 1);
  sum += arr[y][x];
  for (int i = 0; i < s.length(); i++)
  {
    if (s[i] == 'F')
    {
      int nx = x + dx[dir_num];
      int ny = y + dy[dir_num];
      if (!InRange(nx, ny, n))
        continue;
      else
      {
        x = x + dx[dir_num];
        y = y + dy[dir_num];
        sum += arr[y][x];
      }
    }

    if (s[i] == 'L')
    {
      dir_num = (dir_num + 3) % 4;
    }

    if (s[i] == 'R')
    {
      dir_num = (dir_num + 1) % 4;
    }
  }
  cout << sum << '\n';
  return 0;
}
